apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-api
  namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    sample: api
  labels:
    sample: api
  namespace: default
  name: sample-api
spec:
  containers:
    - image: ko://github.com/katanomi/pkg/examples/sample-api
      name: api
      ports:
        - containerPort: 8100
          name: http
          protocol: TCP
      env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
      securityContext:
        allowPrivilegeEscalation: false
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8100
        initialDelaySeconds: 15
        periodSeconds: 20
      readinessProbe:
        httpGet:
          path: /readyz
          port: 8100
        initialDelaySeconds: 5
        periodSeconds: 10
      resources:
        limits:
          cpu: 100m
          memory: 30Mi
        requests:
          cpu: 100m
          memory: 20Mi
  serviceAccountName: sample-api
  terminationGracePeriodSeconds: 10
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  namespace: default
  name: config-logging
---
apiVersion: v1
kind: Service
metadata:
  labels:
    sample: api
  name: sample-api
  namespace: default
spec:
  ports:
    - name: http
      port: 8100
      targetPort: 8100
  type: NodePort
  selector:
    sample: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sample-api-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: sample-api
    namespace: default
