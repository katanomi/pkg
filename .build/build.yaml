###################################################
### WARNING: This file is synced from katanomi/hack
### DO NOT CHANGE IT MANUALLY
###################################################
apiVersion: builds.katanomi.dev/v1alpha1
kind: Build
spec:
  workspaces:
    - description: >
        This workspace is shared among all the pipeline tasks to read/write
        common resources
      name: source
    - description: |
        Cache for go modules
      name: cache
      optional: true
  tasks:
    - name: boilerplate
      retries: 0
      taskRef:
        name: katanomi-boilerplate
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: source
      params:
        - name: revision
          value: $(params.git-revision)
    - name: donotsubmit
      runAfter:
        - boilerplate
      retries: 0
      taskRef:
        name: katanomi-donotsubmit
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: source
      params:
        - name: revision
          value: $(params.git-revision)
    - name: knative-style
      runAfter:
        - donotsubmit
      retries: 0
      taskRef:
        name: katanomi-knative-style
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: source
      params:
        - name: ignore-filetypes
          value: (\.png|\.drawio|\.DS_Store)$
        - name: ignore-dirs
          value: (^vendor/|^third_party/|^.git|kodata)
        - name: revision
          value: $(params.git-revision)
    - name: test
      timeout: 30m
      retries: 0
      taskRef:
        kind: ClusterTask
        name: go-unit-test
      workspaces:
        - name: source
          workspace: source
        - name: cache
          workspace: cache
      params:
        - name: command
          value: |
            export GOPROXY=https://build-nexus.alauda.cn/repository/golang/,direct
            export GOMAXPROCS=4
            if [ "$GOCACHE" != "" ]; then
              export TOOLBIN=$GOCACHE/../toolbin
              mkdir -p $TOOLBIN
              ls -la $TOOLBIN
            fi

            go mod download

            make test
        - name: test-report-path
          value: ./test.json
        - name: coverage-report-path
          value: ./cover.out
        - name: quality-gate-rules
          value:
            - passed-tests-rate=100
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: golangci-lint
      timeout: 30m
      retries: 0
      taskRef:
        kind: ClusterTask
        name: golangci-lint
      workspaces:
        - name: source
          workspace: source
        - name: cache
          workspace: cache
      params:
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
        - name: command
          value: >
            export GOPROXY=https://build-nexus.alauda.cn/repository/golang/,direct

            golangci-lint run

        - name: report-path
          value: ./golangci-lint-report.txt
        - name: quality-gate
          value: "false"
    - name: sonar-scan
      runAfter:
        - test
        - golangci-lint
      timeout: 30m
      retries: 0
      taskRef:
        kind: ClusterTask
        name: sonarqube-analysis
      workspaces:
        - name: source
          workspace: source
      params:
        - name: server
          value: https://build-sonar.alauda.cn
  runTemplate:
    spec:
      taskRunSpecs:
        - pipelineTaskName: test
          stepOverrides:
            - name: prepare
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 50m
                  memory: 50Mi
            - name: test
              resources:
                requests:
                  cpu: "4"
                  memory: 3Gi
                limits:
                  cpu: "4"
                  memory: 3Gi
            - name: analysis
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 50m
                  memory: 50Mi

