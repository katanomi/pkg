/*
Copyright 2022 The Katanomi Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	authv1 "k8s.io/api/authorization/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var TestCaseGVK = GroupVersion.WithKind("TestCase")
var TestCaseListGVK = GroupVersion.WithKind("TestCaseList")

// TestCase object for plugins
type TestCase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec TestCaseSpec `json:"spec"`

	Status TestCaseStatus `json:"status,omitempty"`
}

// TestCaseSpec spec for TestCase
type TestCaseSpec struct {
	// ID is the test plan id
	ID string `json:"id"`
	// Type is the type description from integration tools
	Type string `json:"type"`
	// Prerequisite are the preparations before executing the testcase steps
	Prerequisite string `json:"prerequisite"`
	// Steps tell testers how to do to execute this case
	Steps []TestCaseStepInfo `json:"steps"`
	// CreatedBy is the user who created the TestCase
	CreatedBy UserSpec `json:"createdBy"`
	// Priority shows how important this case is
	Priority string `json:"priority"`
	// RelatedRequirements is a list of product requirements related to this test case
	RelatedRequirements []TestCaseRelatedObjectInfo `json:"relatedRequirements"`
	// RelatedBugs is a list of bugs related to this test case
	RelatedBugs []TestCaseRelatedObjectInfo `json:"relatedBugs"`
}

type TestCaseStepInfo struct {
	// ID is the id of step generated by integration tools
	ID string `json:"id"`
	// Description shows how to run this step
	Description string `json:"description"`
	// Order shows the order of step
	Order string `json:"order"`
	// Expect shows the expected output after running this step
	Expect string `json:"expect"`
}

type TestCaseRelatedObjectInfo struct {
	// Title is the title of related object
	Title string `json:"title"`
	// TargetURL is the URL for redirection
	TargetURL string `json:"targetURL"`
}

type TestCaseStatus struct {
	// LastExecution is spec of the latest TestExecution related to the test case
	LastExecution *TestCaseExecutionSpec `json:"lastExecution"`
}

// TestCaseList list of TestCases
type TestCaseList struct {
	metav1.TypeMeta `json:",inline"`
	ListMeta        `json:"metadata,omitempty"`

	Items []TestCase `json:"items"`
}

// TestCaseResourceAttributes returns a ResourceAttribute object to be used in a filter
func TestCaseResourceAttributes(verb string) authv1.ResourceAttributes {
	return authv1.ResourceAttributes{
		Group:    GroupVersion.Group,
		Version:  GroupVersion.Version,
		Resource: "testcases",
		Verb:     verb,
	}
}
