//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The Katanomi Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/api/rbac/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"knative.dev/pkg/apis"
	duckv1 "knative.dev/pkg/apis/duck/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Approval) DeepCopyInto(out *Approval) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make(UserApprovals, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Approval.
func (in *Approval) DeepCopy() *Approval {
	if in == nil {
		return nil
	}
	out := new(Approval)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalCheckStatus) DeepCopyInto(out *ApprovalCheckStatus) {
	*out = *in
	if in.ApprovalStartTime != nil {
		in, out := &in.ApprovalStartTime, &out.ApprovalStartTime
		*out = (*in).DeepCopy()
	}
	if in.Approvals != nil {
		in, out := &in.Approvals, &out.Approvals
		*out = make(ApprovalStatuses, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalCheckStatus.
func (in *ApprovalCheckStatus) DeepCopy() *ApprovalCheckStatus {
	if in == nil {
		return nil
	}
	out := new(ApprovalCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalSpec) DeepCopyInto(out *ApprovalSpec) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]v1.Subject, len(*in))
		copy(*out, *in)
	}
	out.Timeout = in.Timeout
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalSpec.
func (in *ApprovalSpec) DeepCopy() *ApprovalSpec {
	if in == nil {
		return nil
	}
	out := new(ApprovalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalStatus) DeepCopyInto(out *ApprovalStatus) {
	*out = *in
	out.Subject = in.Subject
	if in.UserApprovalInput != nil {
		in, out := &in.UserApprovalInput, &out.UserApprovalInput
		*out = new(UserApprovalInput)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(v1.Subject)
		**out = **in
	}
	if in.ApprovalTime != nil {
		in, out := &in.ApprovalTime, &out.ApprovalTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalStatus.
func (in *ApprovalStatus) DeepCopy() *ApprovalStatus {
	if in == nil {
		return nil
	}
	out := new(ApprovalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ApprovalStatuses) DeepCopyInto(out *ApprovalStatuses) {
	{
		in := &in
		*out = make(ApprovalStatuses, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalStatuses.
func (in ApprovalStatuses) DeepCopy() ApprovalStatuses {
	if in == nil {
		return nil
	}
	out := new(ApprovalStatuses)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Artifact) DeepCopyInto(out *Artifact) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Artifact.
func (in *Artifact) DeepCopy() *Artifact {
	if in == nil {
		return nil
	}
	out := new(Artifact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactEnvFilter) DeepCopyInto(out *ArtifactEnvFilter) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make(ArtifactFilterRegexList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactEnvFilter.
func (in *ArtifactEnvFilter) DeepCopy() *ArtifactEnvFilter {
	if in == nil {
		return nil
	}
	out := new(ArtifactEnvFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactFilter) DeepCopyInto(out *ArtifactFilter) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]ArtifactTagFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make([]ArtifactEnvFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]ArtifactLabelFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactFilter.
func (in *ArtifactFilter) DeepCopy() *ArtifactFilter {
	if in == nil {
		return nil
	}
	out := new(ArtifactFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ArtifactFilterRegexList) DeepCopyInto(out *ArtifactFilterRegexList) {
	{
		in := &in
		*out = make(ArtifactFilterRegexList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactFilterRegexList.
func (in ArtifactFilterRegexList) DeepCopy() ArtifactFilterRegexList {
	if in == nil {
		return nil
	}
	out := new(ArtifactFilterRegexList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactFilterSet) DeepCopyInto(out *ArtifactFilterSet) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make([]ArtifactFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Any != nil {
		in, out := &in.Any, &out.Any
		*out = make([]ArtifactFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactFilterSet.
func (in *ArtifactFilterSet) DeepCopy() *ArtifactFilterSet {
	if in == nil {
		return nil
	}
	out := new(ArtifactFilterSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactLabelFilter) DeepCopyInto(out *ArtifactLabelFilter) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make(ArtifactFilterRegexList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactLabelFilter.
func (in *ArtifactLabelFilter) DeepCopy() *ArtifactLabelFilter {
	if in == nil {
		return nil
	}
	out := new(ArtifactLabelFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactList) DeepCopyInto(out *ArtifactList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Artifact, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactList.
func (in *ArtifactList) DeepCopy() *ArtifactList {
	if in == nil {
		return nil
	}
	out := new(ArtifactList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactOptions) DeepCopyInto(out *ArtifactOptions) {
	*out = *in
	out.RepositoryOptions = in.RepositoryOptions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactOptions.
func (in *ArtifactOptions) DeepCopy() *ArtifactOptions {
	if in == nil {
		return nil
	}
	out := new(ArtifactOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactParameterSpec) DeepCopyInto(out *ArtifactParameterSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactParameterSpec.
func (in *ArtifactParameterSpec) DeepCopy() *ArtifactParameterSpec {
	if in == nil {
		return nil
	}
	out := new(ArtifactParameterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactSpec) DeepCopyInto(out *ArtifactSpec) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	in.UpdatedTime.DeepCopyInto(&out.UpdatedTime)
	if in.PullTime != nil {
		in, out := &in.PullTime, &out.PullTime
		*out = (*in).DeepCopy()
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactSpec.
func (in *ArtifactSpec) DeepCopy() *ArtifactSpec {
	if in == nil {
		return nil
	}
	out := new(ArtifactSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactTagFilter) DeepCopyInto(out *ArtifactTagFilter) {
	*out = *in
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = make(ArtifactFilterRegexList, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactTagFilter.
func (in *ArtifactTagFilter) DeepCopy() *ArtifactTagFilter {
	if in == nil {
		return nil
	}
	out := new(ArtifactTagFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArtifactTagOptions) DeepCopyInto(out *ArtifactTagOptions) {
	*out = *in
	out.ArtifactOptions = in.ArtifactOptions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArtifactTagOptions.
func (in *ArtifactTagOptions) DeepCopy() *ArtifactTagOptions {
	if in == nil {
		return nil
	}
	out := new(ArtifactTagOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attribute) DeepCopyInto(out *Attribute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attribute.
func (in *Attribute) DeepCopy() *Attribute {
	if in == nil {
		return nil
	}
	out := new(Attribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeSpec) DeepCopyInto(out *AttributeSpec) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]IssueType, len(*in))
		copy(*out, *in)
	}
	if in.Priorities != nil {
		in, out := &in.Priorities, &out.Priorities
		*out = make([]IssuePriority, len(*in))
		copy(*out, *in)
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]AttributeStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeSpec.
func (in *AttributeSpec) DeepCopy() *AttributeSpec {
	if in == nil {
		return nil
	}
	out := new(AttributeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeStatus) DeepCopyInto(out *AttributeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeStatus.
func (in *AttributeStatus) DeepCopy() *AttributeStatus {
	if in == nil {
		return nil
	}
	out := new(AttributeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthCheckOptions) DeepCopyInto(out *AuthCheckOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthCheckOptions.
func (in *AuthCheckOptions) DeepCopy() *AuthCheckOptions {
	if in == nil {
		return nil
	}
	out := new(AuthCheckOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthCheckSpec) DeepCopyInto(out *AuthCheckSpec) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(corev1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthCheckSpec.
func (in *AuthCheckSpec) DeepCopy() *AuthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(AuthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobStore) DeepCopyInto(out *BlobStore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobStore.
func (in *BlobStore) DeepCopy() *BlobStore {
	if in == nil {
		return nil
	}
	out := new(BlobStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobStoreList) DeepCopyInto(out *BlobStoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BlobStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobStoreList.
func (in *BlobStoreList) DeepCopy() *BlobStoreList {
	if in == nil {
		return nil
	}
	out := new(BlobStoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobStoreSpec) DeepCopyInto(out *BlobStoreSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobStoreSpec.
func (in *BlobStoreSpec) DeepCopy() *BlobStoreSpec {
	if in == nil {
		return nil
	}
	out := new(BlobStoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Branch) DeepCopyInto(out *Branch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Branch.
func (in *Branch) DeepCopy() *Branch {
	if in == nil {
		return nil
	}
	out := new(Branch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchList) DeepCopyInto(out *BranchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Branch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchList.
func (in *BranchList) DeepCopy() *BranchList {
	if in == nil {
		return nil
	}
	out := new(BranchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchSpec) DeepCopyInto(out *BranchSpec) {
	*out = *in
	out.Issue = in.Issue
	out.Author = in.Author
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	in.CodeInfo.DeepCopyInto(&out.CodeInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchSpec.
func (in *BranchSpec) DeepCopy() *BranchSpec {
	if in == nil {
		return nil
	}
	out := new(BranchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildGitBranchStatus) DeepCopyInto(out *BuildGitBranchStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildGitBranchStatus.
func (in *BuildGitBranchStatus) DeepCopy() *BuildGitBranchStatus {
	if in == nil {
		return nil
	}
	out := new(BuildGitBranchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildGitCommitStatus) DeepCopyInto(out *BuildGitCommitStatus) {
	*out = *in
	if in.PushedAt != nil {
		in, out := &in.PushedAt, &out.PushedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildGitCommitStatus.
func (in *BuildGitCommitStatus) DeepCopy() *BuildGitCommitStatus {
	if in == nil {
		return nil
	}
	out := new(BuildGitCommitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildGitPullRequestStatus) DeepCopyInto(out *BuildGitPullRequestStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildGitPullRequestStatus.
func (in *BuildGitPullRequestStatus) DeepCopy() *BuildGitPullRequestStatus {
	if in == nil {
		return nil
	}
	out := new(BuildGitPullRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildMetaData) DeepCopyInto(out *BuildMetaData) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildMetaData.
func (in *BuildMetaData) DeepCopy() *BuildMetaData {
	if in == nil {
		return nil
	}
	out := new(BuildMetaData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildMetaDataStatus) DeepCopyInto(out *BuildMetaDataStatus) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(BuildRunGitStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = new(TriggeredBy)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildMetaDataStatus.
func (in *BuildMetaDataStatus) DeepCopy() *BuildMetaDataStatus {
	if in == nil {
		return nil
	}
	out := new(BuildMetaDataStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildRunGitStatus) DeepCopyInto(out *BuildRunGitStatus) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(GitRevision)
		**out = **in
	}
	if in.LastCommit != nil {
		in, out := &in.LastCommit, &out.LastCommit
		*out = new(BuildGitCommitStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = new(BuildGitPullRequestStatus)
		**out = **in
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(BuildGitBranchStatus)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(BuildGitBranchStatus)
		**out = **in
	}
	if in.VersionVariants != nil {
		in, out := &in.VersionVariants, &out.VersionVariants
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildRunGitStatus.
func (in *BuildRunGitStatus) DeepCopy() *BuildRunGitStatus {
	if in == nil {
		return nil
	}
	out := new(BuildRunGitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Check) DeepCopyInto(out *Check) {
	*out = *in
	if in.Approval != nil {
		in, out := &in.Approval, &out.Approval
		*out = new(Approval)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Check.
func (in *Check) DeepCopy() *Check {
	if in == nil {
		return nil
	}
	out := new(Check)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudEvent) DeepCopyInto(out *CloudEvent) {
	*out = *in
	in.Time.DeepCopyInto(&out.Time)
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudEvent.
func (in *CloudEvent) DeepCopy() *CloudEvent {
	if in == nil {
		return nil
	}
	out := new(CloudEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeInfo) DeepCopyInto(out *CodeInfo) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeInfo.
func (in *CodeInfo) DeepCopy() *CodeInfo {
	if in == nil {
		return nil
	}
	out := new(CodeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQuality) DeepCopyInto(out *CodeQuality) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQuality.
func (in *CodeQuality) DeepCopy() *CodeQuality {
	if in == nil {
		return nil
	}
	out := new(CodeQuality)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityAnalyzeMetric) DeepCopyInto(out *CodeQualityAnalyzeMetric) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityAnalyzeMetric.
func (in *CodeQualityAnalyzeMetric) DeepCopy() *CodeQualityAnalyzeMetric {
	if in == nil {
		return nil
	}
	out := new(CodeQualityAnalyzeMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityBaseOption) DeepCopyInto(out *CodeQualityBaseOption) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityBaseOption.
func (in *CodeQualityBaseOption) DeepCopy() *CodeQualityBaseOption {
	if in == nil {
		return nil
	}
	out := new(CodeQualityBaseOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityBranch) DeepCopyInto(out *CodeQualityBranch) {
	*out = *in
	in.AnalysisDate.DeepCopyInto(&out.AnalysisDate)
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make(map[string]CodeQualityAnalyzeMetric, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityBranch.
func (in *CodeQualityBranch) DeepCopy() *CodeQualityBranch {
	if in == nil {
		return nil
	}
	out := new(CodeQualityBranch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityLineChart) DeepCopyInto(out *CodeQualityLineChart) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityLineChart.
func (in *CodeQualityLineChart) DeepCopy() *CodeQualityLineChart {
	if in == nil {
		return nil
	}
	out := new(CodeQualityLineChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityLineChartSpec) DeepCopyInto(out *CodeQualityLineChartSpec) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityLineChartSpec.
func (in *CodeQualityLineChartSpec) DeepCopy() *CodeQualityLineChartSpec {
	if in == nil {
		return nil
	}
	out := new(CodeQualityLineChartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityProjectOverview) DeepCopyInto(out *CodeQualityProjectOverview) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityProjectOverview.
func (in *CodeQualityProjectOverview) DeepCopy() *CodeQualityProjectOverview {
	if in == nil {
		return nil
	}
	out := new(CodeQualityProjectOverview)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityProjectOverviewComponent) DeepCopyInto(out *CodeQualityProjectOverviewComponent) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make(map[string]CodeQualityAnalyzeMetric, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityProjectOverviewComponent.
func (in *CodeQualityProjectOverviewComponent) DeepCopy() *CodeQualityProjectOverviewComponent {
	if in == nil {
		return nil
	}
	out := new(CodeQualityProjectOverviewComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityProjectOverviewSpec) DeepCopyInto(out *CodeQualityProjectOverviewSpec) {
	*out = *in
	out.Summary = in.Summary
	if in.CodeQualityProjects != nil {
		in, out := &in.CodeQualityProjects, &out.CodeQualityProjects
		*out = make([]CodeQualityProjectOverviewComponent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityProjectOverviewSpec.
func (in *CodeQualityProjectOverviewSpec) DeepCopy() *CodeQualityProjectOverviewSpec {
	if in == nil {
		return nil
	}
	out := new(CodeQualityProjectOverviewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityProjectOverviewSpecSummary) DeepCopyInto(out *CodeQualityProjectOverviewSpecSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityProjectOverviewSpecSummary.
func (in *CodeQualityProjectOverviewSpecSummary) DeepCopy() *CodeQualityProjectOverviewSpecSummary {
	if in == nil {
		return nil
	}
	out := new(CodeQualityProjectOverviewSpecSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualitySpec) DeepCopyInto(out *CodeQualitySpec) {
	*out = *in
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		*out = make(map[string]CodeQualityBranch, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualitySpec.
func (in *CodeQualitySpec) DeepCopy() *CodeQualitySpec {
	if in == nil {
		return nil
	}
	out := new(CodeQualitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetrics) DeepCopyInto(out *CodeQualityTaskMetrics) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetrics.
func (in *CodeQualityTaskMetrics) DeepCopy() *CodeQualityTaskMetrics {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsSpec) DeepCopyInto(out *CodeQualityTaskMetricsSpec) {
	*out = *in
	in.Summary.DeepCopyInto(&out.Summary)
	out.Task = in.Task
	out.Component = in.Component
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsSpec.
func (in *CodeQualityTaskMetricsSpec) DeepCopy() *CodeQualityTaskMetricsSpec {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsSpecComponent) DeepCopyInto(out *CodeQualityTaskMetricsSpecComponent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsSpecComponent.
func (in *CodeQualityTaskMetricsSpecComponent) DeepCopy() *CodeQualityTaskMetricsSpecComponent {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsSpecComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsSpecSummary) DeepCopyInto(out *CodeQualityTaskMetricsSpecSummary) {
	*out = *in
	if in.New != nil {
		in, out := &in.New, &out.New
		*out = new(CodeQualityTaskMetricsSpecSummaryOverview)
		**out = **in
	}
	if in.Total != nil {
		in, out := &in.Total, &out.Total
		*out = new(CodeQualityTaskMetricsSpecSummaryOverview)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsSpecSummary.
func (in *CodeQualityTaskMetricsSpecSummary) DeepCopy() *CodeQualityTaskMetricsSpecSummary {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsSpecSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsSpecSummaryOverview) DeepCopyInto(out *CodeQualityTaskMetricsSpecSummaryOverview) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsSpecSummaryOverview.
func (in *CodeQualityTaskMetricsSpecSummaryOverview) DeepCopy() *CodeQualityTaskMetricsSpecSummaryOverview {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsSpecSummaryOverview)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsSpecTask) DeepCopyInto(out *CodeQualityTaskMetricsSpecTask) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsSpecTask.
func (in *CodeQualityTaskMetricsSpecTask) DeepCopy() *CodeQualityTaskMetricsSpecTask {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsSpecTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskMetricsStatus) DeepCopyInto(out *CodeQualityTaskMetricsStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskMetricsStatus.
func (in *CodeQualityTaskMetricsStatus) DeepCopy() *CodeQualityTaskMetricsStatus {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskMetricsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeQualityTaskOption) DeepCopyInto(out *CodeQualityTaskOption) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeQualityTaskOption.
func (in *CodeQualityTaskOption) DeepCopy() *CodeQualityTaskOption {
	if in == nil {
		return nil
	}
	out := new(CodeQualityTaskOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Comment) DeepCopyInto(out *Comment) {
	*out = *in
	out.User = in.User
	in.CreatedTime.DeepCopyInto(&out.CreatedTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Comment.
func (in *Comment) DeepCopy() *Comment {
	if in == nil {
		return nil
	}
	out := new(Comment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateBranchParams) DeepCopyInto(out *CreateBranchParams) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateBranchParams.
func (in *CreateBranchParams) DeepCopy() *CreateBranchParams {
	if in == nil {
		return nil
	}
	out := new(CreateBranchParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateBranchPayload) DeepCopyInto(out *CreateBranchPayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	out.CreateBranchParams = in.CreateBranchParams
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateBranchPayload.
func (in *CreateBranchPayload) DeepCopy() *CreateBranchPayload {
	if in == nil {
		return nil
	}
	out := new(CreateBranchPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateCommitCommentParam) DeepCopyInto(out *CreateCommitCommentParam) {
	*out = *in
	if in.Note != nil {
		in, out := &in.Note, &out.Note
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Line != nil {
		in, out := &in.Line, &out.Line
		*out = new(int)
		**out = **in
	}
	if in.LineType != nil {
		in, out := &in.LineType, &out.LineType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateCommitCommentParam.
func (in *CreateCommitCommentParam) DeepCopy() *CreateCommitCommentParam {
	if in == nil {
		return nil
	}
	out := new(CreateCommitCommentParam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateCommitCommentPayload) DeepCopyInto(out *CreateCommitCommentPayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	in.GitCommitBasicInfo.DeepCopyInto(&out.GitCommitBasicInfo)
	in.CreateCommitCommentParam.DeepCopyInto(&out.CreateCommitCommentParam)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateCommitCommentPayload.
func (in *CreateCommitCommentPayload) DeepCopy() *CreateCommitCommentPayload {
	if in == nil {
		return nil
	}
	out := new(CreateCommitCommentPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateCommitStatusParam) DeepCopyInto(out *CreateCommitStatusParam) {
	*out = *in
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.TargetURL != nil {
		in, out := &in.TargetURL, &out.TargetURL
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Coverage != nil {
		in, out := &in.Coverage, &out.Coverage
		*out = new(float64)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(int)
		**out = **in
	}
	if in.GitCommitStatus != nil {
		in, out := &in.GitCommitStatus, &out.GitCommitStatus
		*out = new(GitCommitStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateCommitStatusParam.
func (in *CreateCommitStatusParam) DeepCopy() *CreateCommitStatusParam {
	if in == nil {
		return nil
	}
	out := new(CreateCommitStatusParam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateCommitStatusPayload) DeepCopyInto(out *CreateCommitStatusPayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	in.GitCommitBasicInfo.DeepCopyInto(&out.GitCommitBasicInfo)
	in.CreateCommitStatusParam.DeepCopyInto(&out.CreateCommitStatusParam)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateCommitStatusPayload.
func (in *CreateCommitStatusPayload) DeepCopy() *CreateCommitStatusPayload {
	if in == nil {
		return nil
	}
	out := new(CreateCommitStatusPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreatePullRequestCommentParam) DeepCopyInto(out *CreatePullRequestCommentParam) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreatePullRequestCommentParam.
func (in *CreatePullRequestCommentParam) DeepCopy() *CreatePullRequestCommentParam {
	if in == nil {
		return nil
	}
	out := new(CreatePullRequestCommentParam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreatePullRequestCommentPayload) DeepCopyInto(out *CreatePullRequestCommentPayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	out.CreatePullRequestCommentParam = in.CreatePullRequestCommentParam
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreatePullRequestCommentPayload.
func (in *CreatePullRequestCommentPayload) DeepCopy() *CreatePullRequestCommentPayload {
	if in == nil {
		return nil
	}
	out := new(CreatePullRequestCommentPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreatePullRequestPayload) DeepCopyInto(out *CreatePullRequestPayload) {
	*out = *in
	out.Source = in.Source
	out.Target = in.Target
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreatePullRequestPayload.
func (in *CreatePullRequestPayload) DeepCopy() *CreatePullRequestPayload {
	if in == nil {
		return nil
	}
	out := new(CreatePullRequestPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateRepoFileParams) DeepCopyInto(out *CreateRepoFileParams) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(GitUserBaseInfo)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateRepoFileParams.
func (in *CreateRepoFileParams) DeepCopy() *CreateRepoFileParams {
	if in == nil {
		return nil
	}
	out := new(CreateRepoFileParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateRepoFilePayload) DeepCopyInto(out *CreateRepoFilePayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	in.CreateRepoFileParams.DeepCopyInto(&out.CreateRepoFileParams)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateRepoFilePayload.
func (in *CreateRepoFilePayload) DeepCopy() *CreateRepoFilePayload {
	if in == nil {
		return nil
	}
	out := new(CreateRepoFilePayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreatedBy) DeepCopyInto(out *CreatedBy) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(v1.Subject)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreatedBy.
func (in *CreatedBy) DeepCopy() *CreatedBy {
	if in == nil {
		return nil
	}
	out := new(CreatedBy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownloadURL) DeepCopyInto(out *DownloadURL) {
	*out = *in
	if in.TarGz != nil {
		in, out := &in.TarGz, &out.TarGz
		*out = new(string)
		**out = **in
	}
	if in.TarBa2 != nil {
		in, out := &in.TarBa2, &out.TarBa2
		*out = new(string)
		**out = **in
	}
	if in.Tar != nil {
		in, out := &in.Tar, &out.Tar
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownloadURL.
func (in *DownloadURL) DeepCopy() *DownloadURL {
	if in == nil {
		return nil
	}
	out := new(DownloadURL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(corev1.ObjectReference)
		**out = **in
	}
	if in.NamespaceRef != nil {
		in, out := &in.NamespaceRef, &out.NamespaceRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBranch) DeepCopyInto(out *GitBranch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBranch.
func (in *GitBranch) DeepCopy() *GitBranch {
	if in == nil {
		return nil
	}
	out := new(GitBranch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBranchBaseInfo) DeepCopyInto(out *GitBranchBaseInfo) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBranchBaseInfo.
func (in *GitBranchBaseInfo) DeepCopy() *GitBranchBaseInfo {
	if in == nil {
		return nil
	}
	out := new(GitBranchBaseInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBranchList) DeepCopyInto(out *GitBranchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitBranch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBranchList.
func (in *GitBranchList) DeepCopy() *GitBranchList {
	if in == nil {
		return nil
	}
	out := new(GitBranchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBranchOption) DeepCopyInto(out *GitBranchOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBranchOption.
func (in *GitBranchOption) DeepCopy() *GitBranchOption {
	if in == nil {
		return nil
	}
	out := new(GitBranchOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBranchSpec) DeepCopyInto(out *GitBranchSpec) {
	*out = *in
	out.GitBranchBaseInfo = in.GitBranchBaseInfo
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(bool)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
	if in.DevelopersCanPush != nil {
		in, out := &in.DevelopersCanPush, &out.DevelopersCanPush
		*out = new(bool)
		**out = **in
	}
	if in.DevelopersCanMerge != nil {
		in, out := &in.DevelopersCanMerge, &out.DevelopersCanMerge
		*out = new(bool)
		**out = **in
	}
	in.Commit.DeepCopyInto(&out.Commit)
	in.DownloadURL.DeepCopyInto(&out.DownloadURL)
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBranchSpec.
func (in *GitBranchSpec) DeepCopy() *GitBranchSpec {
	if in == nil {
		return nil
	}
	out := new(GitBranchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommit) DeepCopyInto(out *GitCommit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommit.
func (in *GitCommit) DeepCopy() *GitCommit {
	if in == nil {
		return nil
	}
	out := new(GitCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitBasicInfo) DeepCopyInto(out *GitCommitBasicInfo) {
	*out = *in
	if in.SHA != nil {
		in, out := &in.SHA, &out.SHA
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitBasicInfo.
func (in *GitCommitBasicInfo) DeepCopy() *GitCommitBasicInfo {
	if in == nil {
		return nil
	}
	out := new(GitCommitBasicInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitComment) DeepCopyInto(out *GitCommitComment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitComment.
func (in *GitCommitComment) DeepCopy() *GitCommitComment {
	if in == nil {
		return nil
	}
	out := new(GitCommitComment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitCommentList) DeepCopyInto(out *GitCommitCommentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitCommitComment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitCommentList.
func (in *GitCommitCommentList) DeepCopy() *GitCommitCommentList {
	if in == nil {
		return nil
	}
	out := new(GitCommitCommentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitCommentSpec) DeepCopyInto(out *GitCommitCommentSpec) {
	*out = *in
	if in.LineType != nil {
		in, out := &in.LineType, &out.LineType
		*out = new(string)
		**out = **in
	}
	out.Author = in.Author
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitCommentSpec.
func (in *GitCommitCommentSpec) DeepCopy() *GitCommitCommentSpec {
	if in == nil {
		return nil
	}
	out := new(GitCommitCommentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitInfo) DeepCopyInto(out *GitCommitInfo) {
	*out = *in
	if in.SHA != nil {
		in, out := &in.SHA, &out.SHA
		*out = new(string)
		**out = **in
	}
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitInfo.
func (in *GitCommitInfo) DeepCopy() *GitCommitInfo {
	if in == nil {
		return nil
	}
	out := new(GitCommitInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitList) DeepCopyInto(out *GitCommitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitCommit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitList.
func (in *GitCommitList) DeepCopy() *GitCommitList {
	if in == nil {
		return nil
	}
	out := new(GitCommitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitListOption) DeepCopyInto(out *GitCommitListOption) {
	*out = *in
	out.GitRepo = in.GitRepo
	if in.Since != nil {
		in, out := &in.Since, &out.Since
		*out = (*in).DeepCopy()
	}
	if in.Until != nil {
		in, out := &in.Until, &out.Until
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitListOption.
func (in *GitCommitListOption) DeepCopy() *GitCommitListOption {
	if in == nil {
		return nil
	}
	out := new(GitCommitListOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitOption) DeepCopyInto(out *GitCommitOption) {
	*out = *in
	out.GitRepo = in.GitRepo
	in.GitCommitBasicInfo.DeepCopyInto(&out.GitCommitBasicInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitOption.
func (in *GitCommitOption) DeepCopy() *GitCommitOption {
	if in == nil {
		return nil
	}
	out := new(GitCommitOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitSpec) DeepCopyInto(out *GitCommitSpec) {
	*out = *in
	in.GitCommitInfo.DeepCopyInto(&out.GitCommitInfo)
	if in.Coverage != nil {
		in, out := &in.Coverage, &out.Coverage
		*out = new(float64)
		**out = **in
	}
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(GitUserBaseInfo)
		**out = **in
	}
	if in.Committer != nil {
		in, out := &in.Committer, &out.Committer
		*out = new(GitUserBaseInfo)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitSpec.
func (in *GitCommitSpec) DeepCopy() *GitCommitSpec {
	if in == nil {
		return nil
	}
	out := new(GitCommitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitStatus) DeepCopyInto(out *GitCommitStatus) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatus.
func (in *GitCommitStatus) DeepCopy() *GitCommitStatus {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitStatusInfo) DeepCopyInto(out *GitCommitStatusInfo) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatusInfo.
func (in *GitCommitStatusInfo) DeepCopy() *GitCommitStatusInfo {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatusInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in GitCommitStatusInfoList) DeepCopyInto(out *GitCommitStatusInfoList) {
	{
		in := &in
		*out = make(GitCommitStatusInfoList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatusInfoList.
func (in GitCommitStatusInfoList) DeepCopy() GitCommitStatusInfoList {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatusInfoList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitStatusList) DeepCopyInto(out *GitCommitStatusList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitCommitStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatusList.
func (in *GitCommitStatusList) DeepCopy() *GitCommitStatusList {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatusList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitStatusSpec) DeepCopyInto(out *GitCommitStatusSpec) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	out.Author = in.Author
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatusSpec.
func (in *GitCommitStatusSpec) DeepCopy() *GitCommitStatusSpec {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitStatusStatus) DeepCopyInto(out *GitCommitStatusStatus) {
	*out = *in
	if in.GitCommitStatusInfoList != nil {
		in, out := &in.GitCommitStatusInfoList, &out.GitCommitStatusInfoList
		*out = make(GitCommitStatusInfoList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(apis.Condition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitStatusStatus.
func (in *GitCommitStatusStatus) DeepCopy() *GitCommitStatusStatus {
	if in == nil {
		return nil
	}
	out := new(GitCommitStatusStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitOperateLogBaseInfo) DeepCopyInto(out *GitOperateLogBaseInfo) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(GitUserBaseInfo)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitOperateLogBaseInfo.
func (in *GitOperateLogBaseInfo) DeepCopy() *GitOperateLogBaseInfo {
	if in == nil {
		return nil
	}
	out := new(GitOperateLogBaseInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequest) DeepCopyInto(out *GitPullRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequest.
func (in *GitPullRequest) DeepCopy() *GitPullRequest {
	if in == nil {
		return nil
	}
	out := new(GitPullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestList) DeepCopyInto(out *GitPullRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitPullRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestList.
func (in *GitPullRequestList) DeepCopy() *GitPullRequestList {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestListOption) DeepCopyInto(out *GitPullRequestListOption) {
	*out = *in
	out.GitRepo = in.GitRepo
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(PullRequestState)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestListOption.
func (in *GitPullRequestListOption) DeepCopy() *GitPullRequestListOption {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestListOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestNote) DeepCopyInto(out *GitPullRequestNote) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestNote.
func (in *GitPullRequestNote) DeepCopy() *GitPullRequestNote {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestNote)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestNoteList) DeepCopyInto(out *GitPullRequestNoteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitPullRequestNote, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestNoteList.
func (in *GitPullRequestNoteList) DeepCopy() *GitPullRequestNoteList {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestNoteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestNoteSpec) DeepCopyInto(out *GitPullRequestNoteSpec) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestNoteSpec.
func (in *GitPullRequestNoteSpec) DeepCopy() *GitPullRequestNoteSpec {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestNoteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestOption) DeepCopyInto(out *GitPullRequestOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestOption.
func (in *GitPullRequestOption) DeepCopy() *GitPullRequestOption {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestSpec) DeepCopyInto(out *GitPullRequestSpec) {
	*out = *in
	out.GitRepo = in.GitRepo
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	if in.UpdateAt != nil {
		in, out := &in.UpdateAt, &out.UpdateAt
		*out = (*in).DeepCopy()
	}
	if in.ClosedAt != nil {
		in, out := &in.ClosedAt, &out.ClosedAt
		*out = (*in).DeepCopy()
	}
	out.Target = in.Target
	out.Source = in.Source
	out.Author = in.Author
	if in.MergeLog != nil {
		in, out := &in.MergeLog, &out.MergeLog
		*out = new(GitOperateLogBaseInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestSpec.
func (in *GitPullRequestSpec) DeepCopy() *GitPullRequestSpec {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepo) DeepCopyInto(out *GitRepo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepo.
func (in *GitRepo) DeepCopy() *GitRepo {
	if in == nil {
		return nil
	}
	out := new(GitRepo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoFile) DeepCopyInto(out *GitRepoFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoFile.
func (in *GitRepoFile) DeepCopy() *GitRepoFile {
	if in == nil {
		return nil
	}
	out := new(GitRepoFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoFileOption) DeepCopyInto(out *GitRepoFileOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoFileOption.
func (in *GitRepoFileOption) DeepCopy() *GitRepoFileOption {
	if in == nil {
		return nil
	}
	out := new(GitRepoFileOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoFileSpec) DeepCopyInto(out *GitRepoFileSpec) {
	*out = *in
	in.GitCommitBasicInfo.DeepCopyInto(&out.GitCommitBasicInfo)
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoFileSpec.
func (in *GitRepoFileSpec) DeepCopy() *GitRepoFileSpec {
	if in == nil {
		return nil
	}
	out := new(GitRepoFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoFileTreeOption) DeepCopyInto(out *GitRepoFileTreeOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoFileTreeOption.
func (in *GitRepoFileTreeOption) DeepCopy() *GitRepoFileTreeOption {
	if in == nil {
		return nil
	}
	out := new(GitRepoFileTreeOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepository) DeepCopyInto(out *GitRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepository.
func (in *GitRepository) DeepCopy() *GitRepository {
	if in == nil {
		return nil
	}
	out := new(GitRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryFileTree) DeepCopyInto(out *GitRepositoryFileTree) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryFileTree.
func (in *GitRepositoryFileTree) DeepCopy() *GitRepositoryFileTree {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryFileTree)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryFileTreeNode) DeepCopyInto(out *GitRepositoryFileTreeNode) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryFileTreeNode.
func (in *GitRepositoryFileTreeNode) DeepCopy() *GitRepositoryFileTreeNode {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryFileTreeNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryFileTreeSpec) DeepCopyInto(out *GitRepositoryFileTreeSpec) {
	*out = *in
	if in.Tree != nil {
		in, out := &in.Tree, &out.Tree
		*out = make([]GitRepositoryFileTreeNode, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryFileTreeSpec.
func (in *GitRepositoryFileTreeSpec) DeepCopy() *GitRepositoryFileTreeSpec {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryFileTreeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryList) DeepCopyInto(out *GitRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryList.
func (in *GitRepositoryList) DeepCopy() *GitRepositoryList {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositorySpec) DeepCopyInto(out *GitRepositorySpec) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	in.UpdatedAt.DeepCopyInto(&out.UpdatedAt)
	out.Owner = in.Owner
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositorySpec.
func (in *GitRepositorySpec) DeepCopy() *GitRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(GitRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTag) DeepCopyInto(out *GitRepositoryTag) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTag.
func (in *GitRepositoryTag) DeepCopy() *GitRepositoryTag {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTagInfo) DeepCopyInto(out *GitRepositoryTagInfo) {
	*out = *in
	if in.SHA != nil {
		in, out := &in.SHA, &out.SHA
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTagInfo.
func (in *GitRepositoryTagInfo) DeepCopy() *GitRepositoryTagInfo {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTagInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTagList) DeepCopyInto(out *GitRepositoryTagList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitRepositoryTag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTagList.
func (in *GitRepositoryTagList) DeepCopy() *GitRepositoryTagList {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTagList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTagListOption) DeepCopyInto(out *GitRepositoryTagListOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTagListOption.
func (in *GitRepositoryTagListOption) DeepCopy() *GitRepositoryTagListOption {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTagListOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTagOption) DeepCopyInto(out *GitRepositoryTagOption) {
	*out = *in
	out.GitRepo = in.GitRepo
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTagOption.
func (in *GitRepositoryTagOption) DeepCopy() *GitRepositoryTagOption {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTagOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositoryTagSpec) DeepCopyInto(out *GitRepositoryTagSpec) {
	*out = *in
	in.GitRepositoryTagInfo.DeepCopyInto(&out.GitRepositoryTagInfo)
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositoryTagSpec.
func (in *GitRepositoryTagSpec) DeepCopy() *GitRepositoryTagSpec {
	if in == nil {
		return nil
	}
	out := new(GitRepositoryTagSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRevision) DeepCopyInto(out *GitRevision) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRevision.
func (in *GitRevision) DeepCopy() *GitRevision {
	if in == nil {
		return nil
	}
	out := new(GitRevision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitUserBaseInfo) DeepCopyInto(out *GitUserBaseInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitUserBaseInfo.
func (in *GitUserBaseInfo) DeepCopy() *GitUserBaseInfo {
	if in == nil {
		return nil
	}
	out := new(GitUserBaseInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HistoryLimits) DeepCopyInto(out *HistoryLimits) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HistoryLimits.
func (in *HistoryLimits) DeepCopy() *HistoryLimits {
	if in == nil {
		return nil
	}
	out := new(HistoryLimits)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Issue) DeepCopyInto(out *Issue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Issue.
func (in *Issue) DeepCopy() *Issue {
	if in == nil {
		return nil
	}
	out := new(Issue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueInfo) DeepCopyInto(out *IssueInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueInfo.
func (in *IssueInfo) DeepCopy() *IssueInfo {
	if in == nil {
		return nil
	}
	out := new(IssueInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueList) DeepCopyInto(out *IssueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Issue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueList.
func (in *IssueList) DeepCopy() *IssueList {
	if in == nil {
		return nil
	}
	out := new(IssueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueOptions) DeepCopyInto(out *IssueOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueOptions.
func (in *IssueOptions) DeepCopy() *IssueOptions {
	if in == nil {
		return nil
	}
	out := new(IssueOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssuePriority) DeepCopyInto(out *IssuePriority) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssuePriority.
func (in *IssuePriority) DeepCopy() *IssuePriority {
	if in == nil {
		return nil
	}
	out := new(IssuePriority)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueProject) DeepCopyInto(out *IssueProject) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueProject.
func (in *IssueProject) DeepCopy() *IssueProject {
	if in == nil {
		return nil
	}
	out := new(IssueProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueSpec) DeepCopyInto(out *IssueSpec) {
	*out = *in
	out.Project = in.Project
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	out.Priority = in.Priority
	out.Assign = in.Assign
	in.UpdatedTime.DeepCopyInto(&out.UpdatedTime)
	out.Author = in.Author
	if in.RelateIssues != nil {
		in, out := &in.RelateIssues, &out.RelateIssues
		*out = make([]RelateIssue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubTasks != nil {
		in, out := &in.SubTasks, &out.SubTasks
		*out = make([]RelateIssue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = make([]Comment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueSpec.
func (in *IssueSpec) DeepCopy() *IssueSpec {
	if in == nil {
		return nil
	}
	out := new(IssueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueType) DeepCopyInto(out *IssueType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueType.
func (in *IssueType) DeepCopy() *IssueType {
	if in == nil {
		return nil
	}
	out := new(IssueType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListMeta) DeepCopyInto(out *ListMeta) {
	*out = *in
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Page != nil {
		in, out := &in.Page, &out.Page
		*out = new(int)
		**out = **in
	}
	if in.ItemsPerPage != nil {
		in, out := &in.ItemsPerPage, &out.ItemsPerPage
		*out = new(int)
		**out = **in
	}
	if in.TotalPages != nil {
		in, out := &in.TotalPages, &out.TotalPages
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListMeta.
func (in *ListMeta) DeepCopy() *ListMeta {
	if in == nil {
		return nil
	}
	out := new(ListMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListOptions) DeepCopyInto(out *ListOptions) {
	*out = *in
	if in.Search != nil {
		in, out := &in.Search, &out.Search
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.SubResources != nil {
		in, out := &in.SubResources, &out.SubResources
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Sort != nil {
		in, out := &in.Sort, &out.Sort
		*out = make([]SortOptions, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListOptions.
func (in *ListOptions) DeepCopy() *ListOptions {
	if in == nil {
		return nil
	}
	out := new(ListOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedValue) DeepCopyInto(out *NamedValue) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedValue.
func (in *NamedValue) DeepCopy() *NamedValue {
	if in == nil {
		return nil
	}
	out := new(NamedValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectCondition) DeepCopyInto(out *ObjectCondition) {
	*out = *in
	in.Condition.DeepCopyInto(&out.Condition)
	out.ObjectReference = in.ObjectReference
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectCondition.
func (in *ObjectCondition) DeepCopy() *ObjectCondition {
	if in == nil {
		return nil
	}
	out := new(ObjectCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ObjectConditions) DeepCopyInto(out *ObjectConditions) {
	{
		in := &in
		*out = make(ObjectConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectConditions.
func (in ObjectConditions) DeepCopy() ObjectConditions {
	if in == nil {
		return nil
	}
	out := new(ObjectConditions)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceRefs != nil {
		in, out := &in.NamespaceRefs, &out.NamespaceRefs
		*out = make([]corev1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelateIssue) DeepCopyInto(out *RelateIssue) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelateIssue.
func (in *RelateIssue) DeepCopy() *RelateIssue {
	if in == nil {
		return nil
	}
	out := new(RelateIssue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository) DeepCopyInto(out *Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository.
func (in *Repository) DeepCopy() *Repository {
	if in == nil {
		return nil
	}
	out := new(Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryList) DeepCopyInto(out *RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryList.
func (in *RepositoryList) DeepCopy() *RepositoryList {
	if in == nil {
		return nil
	}
	out := new(RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryOptions) DeepCopyInto(out *RepositoryOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryOptions.
func (in *RepositoryOptions) DeepCopy() *RepositoryOptions {
	if in == nil {
		return nil
	}
	out := new(RepositoryOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySpec) DeepCopyInto(out *RepositorySpec) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceRefs != nil {
		in, out := &in.NamespaceRefs, &out.NamespaceRefs
		*out = make([]corev1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	in.UpdatedTime.DeepCopyInto(&out.UpdatedTime)
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySpec.
func (in *RepositorySpec) DeepCopy() *RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceURI) DeepCopyInto(out *ResourceURI) {
	*out = *in
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceURI.
func (in *ResourceURI) DeepCopy() *ResourceURI {
	if in == nil {
		return nil
	}
	out := new(ResourceURI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceURL) DeepCopyInto(out *ResourceURL) {
	*out = *in
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceURL.
func (in *ResourceURL) DeepCopy() *ResourceURL {
	if in == nil {
		return nil
	}
	out := new(ResourceURL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortOptions) DeepCopyInto(out *SortOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortOptions.
func (in *SortOptions) DeepCopy() *SortOptions {
	if in == nil {
		return nil
	}
	out := new(SortOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestBuildStatusInfo) DeepCopyInto(out *TestBuildStatusInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestBuildStatusInfo.
func (in *TestBuildStatusInfo) DeepCopy() *TestBuildStatusInfo {
	if in == nil {
		return nil
	}
	out := new(TestBuildStatusInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCase) DeepCopyInto(out *TestCase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCase.
func (in *TestCase) DeepCopy() *TestCase {
	if in == nil {
		return nil
	}
	out := new(TestCase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseExecution) DeepCopyInto(out *TestCaseExecution) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseExecution.
func (in *TestCaseExecution) DeepCopy() *TestCaseExecution {
	if in == nil {
		return nil
	}
	out := new(TestCaseExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseExecutionList) DeepCopyInto(out *TestCaseExecutionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestCaseExecution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseExecutionList.
func (in *TestCaseExecutionList) DeepCopy() *TestCaseExecutionList {
	if in == nil {
		return nil
	}
	out := new(TestCaseExecutionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseExecutionSpec) DeepCopyInto(out *TestCaseExecutionSpec) {
	*out = *in
	if in.BuildRef != nil {
		in, out := &in.BuildRef, &out.BuildRef
		*out = new(TestObjectRef)
		**out = **in
	}
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	out.CreatedBy = in.CreatedBy
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseExecutionSpec.
func (in *TestCaseExecutionSpec) DeepCopy() *TestCaseExecutionSpec {
	if in == nil {
		return nil
	}
	out := new(TestCaseExecutionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseList) DeepCopyInto(out *TestCaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestCase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseList.
func (in *TestCaseList) DeepCopy() *TestCaseList {
	if in == nil {
		return nil
	}
	out := new(TestCaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseRelatedObjectInfo) DeepCopyInto(out *TestCaseRelatedObjectInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseRelatedObjectInfo.
func (in *TestCaseRelatedObjectInfo) DeepCopy() *TestCaseRelatedObjectInfo {
	if in == nil {
		return nil
	}
	out := new(TestCaseRelatedObjectInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseSpec) DeepCopyInto(out *TestCaseSpec) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]TestCaseStepInfo, len(*in))
		copy(*out, *in)
	}
	out.CreatedBy = in.CreatedBy
	if in.RelatedRequirements != nil {
		in, out := &in.RelatedRequirements, &out.RelatedRequirements
		*out = make([]TestCaseRelatedObjectInfo, len(*in))
		copy(*out, *in)
	}
	if in.RelatedBugs != nil {
		in, out := &in.RelatedBugs, &out.RelatedBugs
		*out = make([]TestCaseRelatedObjectInfo, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseSpec.
func (in *TestCaseSpec) DeepCopy() *TestCaseSpec {
	if in == nil {
		return nil
	}
	out := new(TestCaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseStatus) DeepCopyInto(out *TestCaseStatus) {
	*out = *in
	if in.LastExecution != nil {
		in, out := &in.LastExecution, &out.LastExecution
		*out = new(TestCaseExecutionSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseStatus.
func (in *TestCaseStatus) DeepCopy() *TestCaseStatus {
	if in == nil {
		return nil
	}
	out := new(TestCaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestCaseStepInfo) DeepCopyInto(out *TestCaseStepInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestCaseStepInfo.
func (in *TestCaseStepInfo) DeepCopy() *TestCaseStepInfo {
	if in == nil {
		return nil
	}
	out := new(TestCaseStepInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestModule) DeepCopyInto(out *TestModule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestModule.
func (in *TestModule) DeepCopy() *TestModule {
	if in == nil {
		return nil
	}
	out := new(TestModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestModuleCaseRef) DeepCopyInto(out *TestModuleCaseRef) {
	*out = *in
	out.TestCase = in.TestCase
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestModuleCaseRef.
func (in *TestModuleCaseRef) DeepCopy() *TestModuleCaseRef {
	if in == nil {
		return nil
	}
	out := new(TestModuleCaseRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestModuleList) DeepCopyInto(out *TestModuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestModule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestModuleList.
func (in *TestModuleList) DeepCopy() *TestModuleList {
	if in == nil {
		return nil
	}
	out := new(TestModuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestModuleSpec) DeepCopyInto(out *TestModuleSpec) {
	*out = *in
	if in.TestCases != nil {
		in, out := &in.TestCases, &out.TestCases
		*out = make([]TestModuleCaseRef, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestModuleSpec.
func (in *TestModuleSpec) DeepCopy() *TestModuleSpec {
	if in == nil {
		return nil
	}
	out := new(TestModuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestObjectRef) DeepCopyInto(out *TestObjectRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestObjectRef.
func (in *TestObjectRef) DeepCopy() *TestObjectRef {
	if in == nil {
		return nil
	}
	out := new(TestObjectRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPlan) DeepCopyInto(out *TestPlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPlan.
func (in *TestPlan) DeepCopy() *TestPlan {
	if in == nil {
		return nil
	}
	out := new(TestPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPlanList) DeepCopyInto(out *TestPlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestPlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPlanList.
func (in *TestPlanList) DeepCopy() *TestPlanList {
	if in == nil {
		return nil
	}
	out := new(TestPlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPlanSpec) DeepCopyInto(out *TestPlanSpec) {
	*out = *in
	out.Assignee = in.Assignee
	out.CreatedBy = in.CreatedBy
	if in.BuildRefs != nil {
		in, out := &in.BuildRefs, &out.BuildRefs
		*out = make([]TestObjectRef, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPlanSpec.
func (in *TestPlanSpec) DeepCopy() *TestPlanSpec {
	if in == nil {
		return nil
	}
	out := new(TestPlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestPlanStatus) DeepCopyInto(out *TestPlanStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(apis.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuildRef != nil {
		in, out := &in.BuildRef, &out.BuildRef
		*out = new(TestObjectRef)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = (*in).DeepCopy()
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = (*in).DeepCopy()
	}
	out.TestBuildStatus = in.TestBuildStatus
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestPlanStatus.
func (in *TestPlanStatus) DeepCopy() *TestPlanStatus {
	if in == nil {
		return nil
	}
	out := new(TestPlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestProjectOptions) DeepCopyInto(out *TestProjectOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestProjectOptions.
func (in *TestProjectOptions) DeepCopy() *TestProjectOptions {
	if in == nil {
		return nil
	}
	out := new(TestProjectOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggeredBy) DeepCopyInto(out *TriggeredBy) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(v1.Subject)
		**out = **in
	}
	if in.CloudEvent != nil {
		in, out := &in.CloudEvent, &out.CloudEvent
		*out = new(CloudEvent)
		(*in).DeepCopyInto(*out)
	}
	if in.Ref != nil {
		in, out := &in.Ref, &out.Ref
		*out = new(corev1.ObjectReference)
		**out = **in
	}
	if in.TriggeredTimestamp != nil {
		in, out := &in.TriggeredTimestamp, &out.TriggeredTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggeredBy.
func (in *TriggeredBy) DeepCopy() *TriggeredBy {
	if in == nil {
		return nil
	}
	out := new(TriggeredBy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePullRequestCommentPayload) DeepCopyInto(out *UpdatePullRequestCommentPayload) {
	*out = *in
	out.GitRepo = in.GitRepo
	out.CreatePullRequestCommentParam = in.CreatePullRequestCommentParam
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePullRequestCommentPayload.
func (in *UpdatePullRequestCommentPayload) DeepCopy() *UpdatePullRequestCommentPayload {
	if in == nil {
		return nil
	}
	out := new(UpdatePullRequestCommentPayload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserApproval) DeepCopyInto(out *UserApproval) {
	*out = *in
	out.Subject = in.Subject
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(v1.Subject)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(UserApprovalInput)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserApproval.
func (in *UserApproval) DeepCopy() *UserApproval {
	if in == nil {
		return nil
	}
	out := new(UserApproval)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserApprovalInput) DeepCopyInto(out *UserApprovalInput) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserApprovalInput.
func (in *UserApprovalInput) DeepCopy() *UserApprovalInput {
	if in == nil {
		return nil
	}
	out := new(UserApprovalInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in UserApprovals) DeepCopyInto(out *UserApprovals) {
	{
		in := &in
		*out = make(UserApprovals, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserApprovals.
func (in UserApprovals) DeepCopy() UserApprovals {
	if in == nil {
		return nil
	}
	out := new(UserApprovals)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInfo) DeepCopyInto(out *UserInfo) {
	*out = *in
	in.UserInfo.DeepCopyInto(&out.UserInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInfo.
func (in *UserInfo) DeepCopy() *UserInfo {
	if in == nil {
		return nil
	}
	out := new(UserInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserOptions) DeepCopyInto(out *UserOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserOptions.
func (in *UserOptions) DeepCopy() *UserOptions {
	if in == nil {
		return nil
	}
	out := new(UserOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookRegisterSpec) DeepCopyInto(out *WebhookRegisterSpec) {
	*out = *in
	in.URI.DeepCopyInto(&out.URI)
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Address.DeepCopyInto(&out.Address)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookRegisterSpec.
func (in *WebhookRegisterSpec) DeepCopy() *WebhookRegisterSpec {
	if in == nil {
		return nil
	}
	out := new(WebhookRegisterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookRegisterStatus) DeepCopyInto(out *WebhookRegisterStatus) {
	*out = *in
	in.Address.DeepCopyInto(&out.Address)
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookRegisterStatus.
func (in *WebhookRegisterStatus) DeepCopy() *WebhookRegisterStatus {
	if in == nil {
		return nil
	}
	out := new(WebhookRegisterStatus)
	in.DeepCopyInto(out)
	return out
}
