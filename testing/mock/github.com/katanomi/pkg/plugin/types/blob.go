// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/katanomi/pkg/plugin/types (interfaces: BlobStoreLister)
//
// Generated by this command:
//
//	mockgen -package=types -destination=../../testing/mock/github.com/katanomi/pkg/plugin/types/blob.go github.com/katanomi/pkg/plugin/types BlobStoreLister
//

// Package types is a generated GoMock package.
package types

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/katanomi/pkg/apis/meta/v1alpha1"
	gomock "go.uber.org/mock/gomock"
	zap "go.uber.org/zap"
)

// MockBlobStoreLister is a mock of BlobStoreLister interface.
type MockBlobStoreLister struct {
	ctrl     *gomock.Controller
	recorder *MockBlobStoreListerMockRecorder
}

// MockBlobStoreListerMockRecorder is the mock recorder for MockBlobStoreLister.
type MockBlobStoreListerMockRecorder struct {
	mock *MockBlobStoreLister
}

// NewMockBlobStoreLister creates a new mock instance.
func NewMockBlobStoreLister(ctrl *gomock.Controller) *MockBlobStoreLister {
	mock := &MockBlobStoreLister{ctrl: ctrl}
	mock.recorder = &MockBlobStoreListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlobStoreLister) EXPECT() *MockBlobStoreListerMockRecorder {
	return m.recorder
}

// ListBlobStores mocks base method.
func (m *MockBlobStoreLister) ListBlobStores(arg0 context.Context, arg1 v1alpha1.ListOptions) (*v1alpha1.BlobStoreList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBlobStores", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.BlobStoreList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBlobStores indicates an expected call of ListBlobStores.
func (mr *MockBlobStoreListerMockRecorder) ListBlobStores(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBlobStores", reflect.TypeOf((*MockBlobStoreLister)(nil).ListBlobStores), arg0, arg1)
}

// Path mocks base method.
func (m *MockBlobStoreLister) Path() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Path")
	ret0, _ := ret[0].(string)
	return ret0
}

// Path indicates an expected call of Path.
func (mr *MockBlobStoreListerMockRecorder) Path() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Path", reflect.TypeOf((*MockBlobStoreLister)(nil).Path))
}

// Setup mocks base method.
func (m *MockBlobStoreLister) Setup(arg0 context.Context, arg1 *zap.SugaredLogger) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Setup", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Setup indicates an expected call of Setup.
func (mr *MockBlobStoreListerMockRecorder) Setup(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Setup", reflect.TypeOf((*MockBlobStoreLister)(nil).Setup), arg0, arg1)
}
