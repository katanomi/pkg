// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/katanomi/pkg/plugin/types (interfaces: AuthChecker,AuthTokenGenerator)

// Package types is a generated GoMock package.
package types

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/katanomi/pkg/apis/meta/v1alpha1"
)

// MockAuthChecker is a mock of AuthChecker interface.
type MockAuthChecker struct {
	ctrl     *gomock.Controller
	recorder *MockAuthCheckerMockRecorder
}

// MockAuthCheckerMockRecorder is the mock recorder for MockAuthChecker.
type MockAuthCheckerMockRecorder struct {
	mock *MockAuthChecker
}

// NewMockAuthChecker creates a new mock instance.
func NewMockAuthChecker(ctrl *gomock.Controller) *MockAuthChecker {
	mock := &MockAuthChecker{ctrl: ctrl}
	mock.recorder = &MockAuthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthChecker) EXPECT() *MockAuthCheckerMockRecorder {
	return m.recorder
}

// AuthCheck mocks base method.
func (m *MockAuthChecker) AuthCheck(arg0 context.Context, arg1 v1alpha1.AuthCheckOptions) (*v1alpha1.AuthCheck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthCheck", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.AuthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthCheck indicates an expected call of AuthCheck.
func (mr *MockAuthCheckerMockRecorder) AuthCheck(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthCheck", reflect.TypeOf((*MockAuthChecker)(nil).AuthCheck), arg0, arg1)
}

// MockAuthTokenGenerator is a mock of AuthTokenGenerator interface.
type MockAuthTokenGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockAuthTokenGeneratorMockRecorder
}

// MockAuthTokenGeneratorMockRecorder is the mock recorder for MockAuthTokenGenerator.
type MockAuthTokenGeneratorMockRecorder struct {
	mock *MockAuthTokenGenerator
}

// NewMockAuthTokenGenerator creates a new mock instance.
func NewMockAuthTokenGenerator(ctrl *gomock.Controller) *MockAuthTokenGenerator {
	mock := &MockAuthTokenGenerator{ctrl: ctrl}
	mock.recorder = &MockAuthTokenGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthTokenGenerator) EXPECT() *MockAuthTokenGeneratorMockRecorder {
	return m.recorder
}

// AuthToken mocks base method.
func (m *MockAuthTokenGenerator) AuthToken(arg0 context.Context) (*v1alpha1.AuthToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthToken", arg0)
	ret0, _ := ret[0].(*v1alpha1.AuthToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthToken indicates an expected call of AuthToken.
func (mr *MockAuthTokenGeneratorMockRecorder) AuthToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthToken", reflect.TypeOf((*MockAuthTokenGenerator)(nil).AuthToken), arg0)
}
